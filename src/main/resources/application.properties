#########################################
#       ORCHESTRATOR PROPERTIES
#########################################
# Spring config
endpoints.enabled=false
endpoints.health.enabled=true
endpoints.info.enabled=true

# Orchestrator waits for Author ELB before reading messages from the queue
# Author ELB retry options
startup.waitForAuthorElb.maxAttempts=150
startup.waitForAuthorElb.backOffPeriod=5000
startup.waitForAuthorElb.maxBackOffPeriod=160000
startup.waitForAuthorElb.backOffPeriodMultiplier=2

#Setting this to true will disable SSL host name verifier on the HTTP Client
http.client.relaxed.ssl.enable=true

# Used to terminate instance when health check triggered. If set to true health check is logged
alarm.content.health.check.terminate.instance.enable=false

#########################################
#         AWS PROPERTIES
#########################################
# Only needed if running Orchestrator outside of AWS
# eg. ap-southeast-2
aws.region=

aws.sqs.queueName=

aws.cloudformation.stackName.publishDispatcher=
aws.cloudformation.stackName.publish=
aws.cloudformation.stackName.previewPublishDispatcher=
aws.cloudformation.stackName.previewPublish=
aws.cloudformation.stackName.authorDispatcher=
aws.cloudformation.stackName.author=
aws.cloudformation.stackName.messaging=

aws.cloudformation.autoScaleGroup.logicalId.publishDispatcher=PublishDispatcherAutoScalingGroup
aws.cloudformation.autoScaleGroup.logicalId.publish=PublishAutoScalingGroup
aws.cloudformation.autoScaleGroup.logicalId.previewPublishDispatcher=PreviewPublishDispatcherAutoScalingGroup
aws.cloudformation.autoScaleGroup.logicalId.previewPublish=PreviewPublishAutoScalingGroup
aws.cloudformation.autoScaleGroup.logicalId.authorDispatcher=AuthorDispatcherAutoScalingGroup
aws.cloudformation.sns.logicalId.eventTopic=AEMASGEventTopic
aws.cloudformation.loadBalancer.logicalId.author=AuthorLoadBalancer

aws.client.connection.timeout=30000
aws.client.max.errorRetry=10

# Only needed if using a proxy
aws.client.useProxy=false
aws.client.proxy.host=
aws.client.proxy.port=

# Protocol also used by the proxy
aws.client.protocol=https

# When taking a snapshot of the publish instance, these tags are taken from
# the publish instance and applied to the snapshot
aws.snapshot.tags=Component,StackPrefix

# Used for when storing snapshots of active publishers
aws.device.name=/dev/sdb



#########################################
#         AEM PROPERTIES
#########################################
aem.credentials.s3.use=false
aem.credentials.s3.file.uri=
# NOTE: If aem.credentials.s3.use is set to true, then it will read a JSON formatted credentials file from S3
# and use the contents to override the credentials properties below
aem.credentials.replicator.username=overwrite-me
aem.credentials.replicator.password=overwrite-me
aem.credentials.orchestrator.username=overwrite-me
aem.credentials.orchestrator.password=overwrite-me

aem.protocol.publishDispatcher=https
aem.protocol.publish=https
aem.protocol.previewPublishDispatcher=https
aem.protocol.previewPublish=https
aem.protocol.authorDispatcher=http
aem.protocol.author=https
aem.port.publishDispatcher=443
aem.port.publish=5433
aem.port.previewPublishDispatcher=443
aem.port.previewPublish=5433
aem.port.authorDispatcher=443
aem.port.author=443

# Used when creating swaggeraem4j client
aem.client.api.verifyssl=false
aem.client.api.debug=false
aem.client.api.connection.timeout=30000

# If set to true, will create reverse replication queues from publish to author
aem.reverseReplication.enable=false

# Used for setting the flush agent log level
aem.flush.logLevel=info

# Used for setting the replication agent log level
aem.replication.logLevel=info

# Used for setting the reverse replication agent log level
aem.reverseReplication.logLevel=error

# Transport URI used when creating the reverse replication queue i.e http://host:port<postfix>
aem.reverseReplication.transportUri.postfix=/bin/receive?sling:authRequestLogin=1

# Enable if you want self-certified SSL certificates to be accepted.
aem.relaxed.ssl.enable=true
